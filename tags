!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/michael/MINISHELL/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/a130f268/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
$(NAME)	Makefile	/^$(NAME): $(OBJS) $/;"	t
$(NAME)	libft/Makefile	/^$(NAME): $(OBJS) $/;"	t
ADD	minishell.h	/^	ADD,$/;"	e	enum:e_gcstatus
APP_OUT	minishell.h	/^	APP_OUT,$/;"	e	enum:e_tolkien
AR	Makefile	/^AR = ar rcs$/;"	m
AR	libft/Makefile	/^AR = ar rc$/;"	m
BUFFER_SIZE	libft/ft_gnl/get_next_line_bonus.h	/^#  define BUFFER_SIZE /;"	d
CC	Makefile	/^CC = gcc$/;"	m
CC	libft/Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Werror -Wall -Wextra -I$(RL)\/include -I. #-g -fsanitize=address$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS = -Werror -Wall -Wextra$/;"	m
DBLQUOTE	minishell.h	/^	DBLQUOTE,$/;"	e	enum:e_tolkien
DEL	minishell.h	/^	DEL,$/;"	e	enum:e_gcstatus
EXT	minishell.h	/^	EXT,$/;"	e	enum:e_gcstatus
GET_NEXT_LINE_BONUS_H	libft/ft_gnl/get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
HERE_DOC	minishell.h	/^	HERE_DOC,$/;"	e	enum:e_tolkien
LIBFT_H	libft/ft_main/libft.h	/^# define LIBFT_H$/;"	d
MINISHELL_H	minishell.h	/^# define MINISHELL_H$/;"	d
NAME	Makefile	/^NAME = minishell$/;"	m
NAME	libft/Makefile	/^NAME = libft.a $/;"	m
OBJS	Makefile	/^OBJS = $(SOURCES:c=o)$/;"	m
OBJS	libft/Makefile	/^OBJS = $(SOURCES:c=o)$/;"	m
OTHER	minishell.h	/^	OTHER,$/;"	e	enum:e_tolkien
PIPE	minishell.h	/^	PIPE,$/;"	e	enum:e_tolkien
PRINTF_H	libft/ft_printf/printf.h	/^# define PRINTF_H$/;"	d
QUOTE	minishell.h	/^	QUOTE,$/;"	e	enum:e_tolkien
REDIR_IN	minishell.h	/^	REDIR_IN,$/;"	e	enum:e_tolkien
REDIR_OUT	minishell.h	/^	REDIR_OUT,$/;"	e	enum:e_tolkien
RESET	minishell.h	/^	RESET,$/;"	e	enum:e_signal
RL	Makefile	/^RL = $(READLINE)$/;"	m
SET	minishell.h	/^	SET,$/;"	e	enum:e_signal
SOURCES	Makefile	/^SOURCES = $(addprefix src\/, $(SRC_MINISH))$/;"	m
SOURCES	libft/Makefile	/^SOURCES = $(addprefix ft_main\/, $(SRC_MAIN)) \\$/;"	m
SPCE	minishell.h	/^	SPCE,$/;"	e	enum:e_tolkien
SRC_GNL	libft/Makefile	/^SRC_GNL = get_next_line_utils_bonus.c get_next_line_bonus.c$/;"	m
SRC_LIBFT_H	libft/src_libft.h	/^# define SRC_LIBFT_H$/;"	d
SRC_MAIN	libft/Makefile	/^SRC_MAIN = ft_bzero.c ft_isalpha.c ft_isdigit.c ft_isalnum.c ft_isascii.c ft_isprint.c \\$/;"	m
SRC_MINISH	Makefile	/^SRC_MINISH = mini_main.c ppx_checks.c ppx_free.c ppx_main.c ppx_utils.c\\$/;"	m
SRC_PRINTF	libft/Makefile	/^SRC_PRINTF = optionctrl.c optionctrl_supl.c print_toconv.c print_toconv_supl.c \\$/;"	m
UNSET	minishell.h	/^	UNSET,$/;"	e	enum:e_signal
add_cmds	src/mini_tok_to_pipes.c	/^void	add_cmds(t_minish *minish)$/;"	f	typeref:typename:void
all	Makefile	/^all: $(NAME) $/;"	t
all	libft/Makefile	/^all: $(NAME) $/;"	t
app_on	minishell.h	/^	int		*app_on;$/;"	m	struct:s_pipex	typeref:typename:int *
append_or_start	src/mini_tok_to_pipes.c	/^void	append_or_start(t_minish *minish, char *strseg, char *tok_delimiter, int i)$/;"	f	typeref:typename:void
apply_width	libft/ft_printf/optionctrl.c	/^void	apply_width(int size, int width, t_toggler *flg)$/;"	f	typeref:typename:void
appwidspe	libft/ft_printf/optionctrl.c	/^void	appwidspe(int size, int width, t_toggler *flg, t_conv *cvut)$/;"	f	typeref:typename:void
argintprt	libft/ft_printf/print_toconv.c	/^void	argintprt(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
btrim	libft/ft_main/ft_strtrim.c	/^int	btrim(char const *s1, char const *set)$/;"	f	typeref:typename:int
buf	libft/ft_gnl/get_next_line_bonus.h	/^	char	*buf;$/;"	m	struct:sct1	typeref:typename:char *
builtin_cd	src/mini_prefork_builtin.c	/^void	builtin_cd(char **cmd, t_minish *minish)$/;"	f	typeref:typename:void
builtin_echo	src/mini_builtins.c	/^void	builtin_echo(char **cmd, t_minish *minish)$/;"	f	typeref:typename:void
builtin_exit	src/mini_prefork_builtin.c	/^int	builtin_exit(char **cmd, t_minish *minish)$/;"	f	typeref:typename:int
builtin_exit_err	src/mini_prefork_builtin.c	/^int builtin_exit_err(char **cmd, int err_type)$/;"	f	typeref:typename:int
builtin_export	src/mini_prefork_export_unset.c	/^void	builtin_export(char **cmd, t_minish *minish)$/;"	f	typeref:typename:void
builtin_pwd	src/mini_builtins.c	/^void	builtin_pwd(void)$/;"	f	typeref:typename:void
builtin_unset	src/mini_prefork_export_unset.c	/^char	**builtin_unset(char **cmd, t_minish *minish)$/;"	f	typeref:typename:char **
calc	libft/ft_main/ft_atoi.c	/^int	calc(int i, const char *nptr)$/;"	f	typeref:typename:int
check_env_var	src/mini_expand.c	/^char	*check_env_var(char **env, char *var)$/;"	f	typeref:typename:char *
check_for_builtin	src/mini_builtins.c	/^void	check_for_builtin(char **cmd, t_minish *minish)$/;"	f	typeref:typename:void
clean	Makefile	/^clean:$/;"	t
clean	libft/Makefile	/^clean:$/;"	t
cleaner	libft/ft_printf/printfer.c	/^void	cleaner(t_conv *cvut)$/;"	f	typeref:typename:void
clear_fing	libft/ft_main/ft_split.c	/^int	clear_fing(char **ptrptr, int j)$/;"	f	typeref:typename:int
cmd	minishell.h	/^	char	***cmd;$/;"	m	struct:s_pipex	typeref:typename:char ***
cmds	minishell.h	/^	char		**cmds;$/;"	m	struct:s_minish	typeref:typename:char **
content	libft/ft_main/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
conv_flags	libft/ft_printf/printf.h	/^	char	*conv_flags;$/;"	m	struct:sct	typeref:typename:char *
copy	libft/ft_main/ft_strtrim.c	/^char	*copy(char *ptr, char const *s1, int bt, int ft)$/;"	f	typeref:typename:char *
counter	libft/ft_main/ft_split.c	/^int	counter(char const *s, char c)$/;"	f	typeref:typename:int
create_cvut	libft/ft_printf/printfer_supl.c	/^void	*create_cvut(const char *str, int i, t_conv *cvut)$/;"	f	typeref:typename:void *
cvut_lenpoint	libft/ft_printf/print_toconv.c	/^void	cvut_lenpoint(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
cvutlenstr	libft/ft_printf/print_toconv_suplll.c	/^void	cvutlenstr(t_conv *cvut, const char *toconv)$/;"	f	typeref:typename:void
deal_with_pipes	src/mini_tokenable.c	/^int	deal_with_pipes(t_minish *minish, int i)$/;"	f	typeref:typename:int
deal_with_redir	src/mini_redir.c	/^int	deal_with_redir(t_minish *minish, int type, int i)$/;"	f	typeref:typename:int
deal_with_spaces	src/mini_tokenable.c	/^int	deal_with_spaces(t_minish *minish, int i)$/;"	f	typeref:typename:int
dealwithplneg	libft/ft_printf/print_toconv_supllll.c	/^void	dealwithplneg(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
dealwithplus	libft/ft_printf/print_toconv_supllll.c	/^void	dealwithplus(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
dealwithpoints	libft/ft_printf/print_toconv_suplll.c	/^void	dealwithpoints(t_toggler *flg, int toconv, t_conv *cvut)$/;"	f	typeref:typename:void
dealwithpospoints	libft/ft_printf/print_toconv_suplll.c	/^void	dealwithpospoints(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
e_gcstatus	minishell.h	/^enum e_gcstatus$/;"	g
e_signal	minishell.h	/^enum e_signal$/;"	g
e_tolkien	minishell.h	/^enum e_tolkien$/;"	g
env	minishell.h	/^	char		**env;$/;"	m	struct:s_minish	typeref:typename:char **
escape_spaces	src/mini_expand.c	/^char	*escape_spaces(char *ret)$/;"	f	typeref:typename:char *
escaped_size	src/mini_expand.c	/^int	escaped_size(char *ret)$/;"	f	typeref:typename:int
exit_status	minishell.h	/^	int		exit_status;$/;"	m	struct:s_pipex	typeref:typename:int
expand_variables	src/mini_expand.c	/^char	*expand_variables(char *quote, t_minish *minish)$/;"	f	typeref:typename:char *
export_noarg	src/mini_builtins.c	/^void	export_noarg(t_minish *minish)$/;"	f	typeref:typename:void
f_in	minishell.h	/^	int		*f_in;$/;"	m	struct:s_pipex	typeref:typename:int *
f_out	minishell.h	/^	int		*f_out;$/;"	m	struct:s_pipex	typeref:typename:int *
fclean	Makefile	/^fclean: clean$/;"	t
fclean	libft/Makefile	/^fclean: clean$/;"	t
fd	minishell.h	/^	int		**fd;$/;"	m	struct:s_pipex	typeref:typename:int **
fd_hd	minishell.h	/^	int		**fd_hd;$/;"	m	struct:s_pipex	typeref:typename:int **
filein	minishell.h	/^	char	**filein;$/;"	m	struct:s_pipex	typeref:typename:char **
fileout	minishell.h	/^	char	**fileout;$/;"	m	struct:s_pipex	typeref:typename:char **
flag_parser	libft/ft_printf/printparser.c	/^char	*flag_parser(const char *str, int i)$/;"	f	typeref:typename:char *
flglying	libft/ft_printf/optionctrl.c	/^void	*flglying(char *flag, t_toggler *flg)$/;"	f	typeref:typename:void *
flush	minishell.h	/^	int	flush;$/;"	m	struct:s_gc	typeref:typename:int
freeandreplace	libft/ft_gnl/get_next_line_utils_bonus.c	/^char	*freeandreplace(char *oldstr, char *stradd, int ind)$/;"	f	typeref:typename:char *
ft_add_history	src/mini_main.c	/^void	ft_add_history(t_minish *minish)$/;"	f	typeref:typename:void
ft_atoi	libft/ft_main/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	f	typeref:typename:int
ft_bzero	libft/ft_main/ft_bzero.c	/^void	ft_bzero(void *s, int n)$/;"	f	typeref:typename:void
ft_calloc	libft/ft_main/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_checkenv	src/ppx_checks.c	/^char	**ft_checkenv(char *env[])$/;"	f	typeref:typename:char **
ft_checkexe	src/ppx_checks.c	/^char		*ft_checkexe(char **paths, char *cmd, t_pipex *ppx)$/;"	f	typeref:typename:char *
ft_checkpath	src/ppx_checks.c	/^char		*ft_checkpath(char *env[], char *cmd, t_pipex *ppx)$/;"	f	typeref:typename:char *
ft_close_fds	src/ppx_free.c	/^void	ft_close_fds(t_pipex *ppx)$/;"	f	typeref:typename:void
ft_copy_env	src/mini_utils.c	/^char	**ft_copy_env(char *env[])$/;"	f	typeref:typename:char **
ft_dup	src/ppx_utils.c	/^void	ft_dup(int in, int out)$/;"	f	typeref:typename:void
ft_err_check_hd	src/mini_errors.c	/^int	ft_err_check_hd(t_minish *minish, t_content *cont, int i)$/;"	f	typeref:typename:int
ft_err_handling	src/mini_errors.c	/^int	ft_err_handling(t_minish *minish)$/;"	f	typeref:typename:int
ft_error	src/ppx_utils.c	/^int	ft_error(char *error, int errn)$/;"	f	typeref:typename:int
ft_feedppx	src/ppx_main.c	/^int	ft_feedppx(t_pipex *ppx, char **av, char **env)$/;"	f	typeref:typename:int
ft_free	src/ppx_free.c	/^void	ft_free(char **av)$/;"	f	typeref:typename:void
ft_freeall	src/ppx_free.c	/^void	ft_freeall(t_pipex *ppx)$/;"	f	typeref:typename:void
ft_gc	src/mini_gc.c	/^void	*ft_gc(void *garb, int status)$/;"	f	typeref:typename:void *
ft_heredoc	src/mini_redir.c	/^int	ft_heredoc(t_pipex *ppx, int i)$/;"	f	typeref:typename:int
ft_initmain	src/mini_main.c	/^int	ft_initmain(t_minish *minish, char **env)$/;"	f	typeref:typename:int
ft_initppx	src/ppx_main.c	/^int	ft_initppx(t_pipex *ppx, t_minish *minish)$/;"	f	typeref:typename:int
ft_initppx_io	src/ppx_main.c	/^int	ft_initppx_io(t_pipex *ppx, t_minish *minish)$/;"	f	typeref:typename:int
ft_isalnum	libft/ft_main/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	libft/ft_main/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	libft/ft_main/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	libft/ft_main/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	libft/ft_main/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	libft/ft_main/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_looppid	src/ppx_main.c	/^void	ft_looppid(t_pipex *ppx, t_minish *minish, int idx)$/;"	f	typeref:typename:void
ft_lstadd_back	libft/ft_main/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	libft/ft_main/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	libft/ft_main/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	libft/ft_main/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f	typeref:typename:void
ft_lstiter	libft/ft_main/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	libft/ft_main/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	libft/ft_main/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	libft/ft_main/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	libft/ft_main/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	libft/ft_main/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	libft/ft_main/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	libft/ft_main/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	libft/ft_main/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f	typeref:typename:void *
ft_memset	libft/ft_main/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f	typeref:typename:void *
ft_mod_split	src/mini_mod_split.c	/^char	**ft_mod_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_printf	libft/ft_printf/printfer.c	/^int	ft_printf(const char *str, ...)$/;"	f	typeref:typename:int
ft_putchar_fd	libft/ft_main/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	libft/ft_main/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_puthex_fd	libft/ft_printf/optionctrl_supl.c	/^void	ft_puthex_fd(unsigned long ln, int fd, t_conv *cvut)$/;"	f	typeref:typename:void
ft_putnbr_fd	libft/ft_main/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	libft/ft_main/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putuns_fd	libft/ft_printf/optionctrl_supl.c	/^void	ft_putuns_fd(unsigned int ln, int fd, t_conv *cvut)$/;"	f	typeref:typename:void
ft_redir_first_cmd	src/mini_redir_cmds.c	/^void	ft_redir_first_cmd(t_pipex *ppx, int idx)$/;"	f	typeref:typename:void
ft_redir_last_cmd	src/mini_redir_cmds.c	/^void	ft_redir_last_cmd(t_pipex *ppx, int idx)$/;"	f	typeref:typename:void
ft_redir_mid_cmd	src/mini_redir_cmds.c	/^void	ft_redir_mid_cmd(t_pipex *ppx, int idx)$/;"	f	typeref:typename:void
ft_redir_only_cmd	src/mini_redir_cmds.c	/^void	ft_redir_only_cmd(t_pipex *ppx, int idx)$/;"	f	typeref:typename:void
ft_signals_n_attr	src/mini_sig_n_attr.c	/^void	ft_signals_n_attr(int toggle)$/;"	f	typeref:typename:void
ft_split	libft/ft_main/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_stralnum	src/ppx_utils.c	/^int	ft_stralnum(char *str)$/;"	f	typeref:typename:int
ft_strchr	libft/ft_main/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strdup	libft/ft_main/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	typeref:typename:char *
ft_striteri	libft/ft_main/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f	typeref:typename:void
ft_strjoin	libft/ft_main/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	libft/ft_main/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	libft/ft_main/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	libft/ft_main/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strmapi	libft/ft_main/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	libft/ft_main/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	libft/ft_main/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	libft/ft_main/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	libft/ft_main/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	libft/ft_main/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_token	src/mini_main.c	/^int	ft_token(t_minish *minish)$/;"	f	typeref:typename:int
ft_tolower	libft/ft_main/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	libft/ft_main/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
ft_waitnclose	src/ppx_free.c	/^int	ft_waitnclose(t_pipex *ppx)$/;"	f	typeref:typename:int
ftrim	libft/ft_main/ft_strtrim.c	/^int	ftrim(char const *s1, char const *set)$/;"	f	typeref:typename:int
gc_free	src/mini_gc.c	/^void	gc_free(void *ptr)$/;"	f	typeref:typename:void
gc_lstclear	src/mini_gc.c	/^void	gc_lstclear(t_list **lst, void (*del)(void*))$/;"	f	typeref:typename:void
gc_lstdelone	src/mini_gc.c	/^void	gc_lstdelone(t_list *lst, void (*del)(void*))$/;"	f	typeref:typename:void
gc_malloc	src/mini_gc.c	/^void	*gc_malloc(size_t size)$/;"	f	typeref:typename:void *
get_next_line	libft/ft_gnl/get_next_line_bonus.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
hash	libft/ft_printf/printf.h	/^	int	hash;$/;"	m	struct:sctone	typeref:typename:int
hd_on	minishell.h	/^	int		*hd_on;$/;"	m	struct:s_pipex	typeref:typename:int *
hexprintshrinker	libft/ft_printf/print_toconv_supl.c	/^void	hexprintshrinker(t_toggler *flg, unsigned int toconv, t_conv *cvut)$/;"	f	typeref:typename:void
hexshrinker	libft/ft_printf/print_toconv_supll.c	/^void	hexshrinker(unsigned int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:void
ifbufhasreturn	libft/ft_gnl/get_next_line_bonus.c	/^char	*ifbufhasreturn(t_strs *strings, char **statline, int i, int *red)$/;"	f	typeref:typename:char *
ifstatret	libft/ft_gnl/get_next_line_bonus.c	/^char	*ifstatret(t_strs *strings, char **statline, int i)$/;"	f	typeref:typename:char *
implfing	libft/ft_main/ft_split.c	/^void	*implfing(char const *s, char c, char **ptrptr, int *i)$/;"	f	typeref:typename:void *
init_cmds	src/mini_tok_to_pipes.c	/^int	init_cmds(t_minish *minish)$/;"	f	typeref:typename:int
init_minish	src/mini_main.c	/^int	init_minish(t_minish *minish)$/;"	f	typeref:typename:int
is_all_space	src/mini_not_tokenable.c	/^int	is_all_space(char *str)$/;"	f	typeref:typename:int
is_dol_end	src/mini_expand.c	/^int	is_dol_end(char *quote, int j)$/;"	f	typeref:typename:int
is_not_tokenable	src/mini_not_tokenable.c	/^int	is_not_tokenable(t_minish *minish, int i, const char *tok[])$/;"	f	typeref:typename:int
is_prefork_builtin	src/mini_utils.c	/^int	is_prefork_builtin(char **cmd)$/;"	f	typeref:typename:int
is_tokenable	src/mini_tokenable.c	/^int	is_tokenable(t_minish *minish, int i, const char *tok[])$/;"	f	typeref:typename:int
len	libft/ft_printf/printf.h	/^	int		len;$/;"	m	struct:sct	typeref:typename:int
lengthhex	libft/ft_printf/print_toconv_supl.c	/^int	lengthhex(unsigned int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:int
lengthint	libft/ft_printf/print_toconv_supl.c	/^int	lengthint(int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:int
lengthprehex	libft/ft_printf/print_toconv_supl.c	/^int	lengthprehex(unsigned int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:int
lengthpreint	libft/ft_printf/print_toconv_supl.c	/^int	lengthpreint(int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
limiter	minishell.h	/^	char	**limiter;$/;"	m	struct:s_pipex	typeref:typename:char **
line	libft/ft_gnl/get_next_line_bonus.h	/^	char	*line;$/;"	m	struct:sct1	typeref:typename:char *
line	minishell.h	/^	char		*line;$/;"	m	struct:s_minish	typeref:typename:char *
lst_line	minishell.h	/^	t_list		*lst_line;$/;"	m	struct:s_minish	typeref:typename:t_list *
main	src/mini_main.c	/^int	main(int ac, char *av[], char *env[])$/;"	f	typeref:typename:int
main_pipe	src/ppx_main.c	/^int	main_pipe(t_minish *minish, t_pipex *ppx)$/;"	f	typeref:typename:int
mainwhile	libft/ft_gnl/get_next_line_bonus.c	/^char	*mainwhile(int fd, t_strs *strings, char **statline, int *red)$/;"	f	typeref:typename:char *
mini_clear_fing	src/mini_mod_split.c	/^int	mini_clear_fing(char **ptrptr, int j)$/;"	f	typeref:typename:int
mini_counter	src/mini_mod_split.c	/^int	mini_counter(char const *s, char c)$/;"	f	typeref:typename:int
mini_implfing	src/mini_mod_split.c	/^void	*mini_implfing(char const *s, char c, char **ptrptr, int *i)$/;"	f	typeref:typename:void *
mini_lstclear	src/mini_utils.c	/^void	mini_lstclear(t_list **lst, void (*del)(void*))$/;"	f	typeref:typename:void
mini_lstdelone	src/mini_utils.c	/^void	mini_lstdelone(t_list *node, void (*del)(void*))$/;"	f	typeref:typename:void
n_cmd	minishell.h	/^	int		n_cmd;$/;"	m	struct:s_pipex	typeref:typename:int
neg	libft/ft_printf/printf.h	/^	int	neg;$/;"	m	struct:sctone	typeref:typename:int
new_env_maker	src/mini_prefork_export_unset.c	/^char	**new_env_maker(char **cmd, t_minish *minish, int j)$/;"	f	typeref:typename:char **
new_env_size	src/mini_prefork_export_unset.c	/^int	new_env_size(char **cmd, t_minish *minish)$/;"	f	typeref:typename:int
new_size	src/mini_expand.c	/^int	new_size(char *quote, t_minish *minish)$/;"	f	typeref:typename:int
next	libft/ft_main/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
no_dupl	libft/ft_printf/printparser.c	/^int	no_dupl(char *retstr, char ch, int e, const char *str)$/;"	f	typeref:typename:int
not_token_size	src/mini_not_tokenable.c	/^int	not_token_size(t_minish *minish, int i, const char *tok[])$/;"	f	typeref:typename:int
num_of_line	src/mini_utils.c	/^int	num_of_line(char **env)$/;"	f	typeref:typename:int
numbertypes	libft/ft_printf/printfer_supl.c	/^int	numbertypes(t_conv *cvut, long long toconv, int i)$/;"	f	typeref:typename:int
numlen	libft/ft_printf/optionctrl_supl.c	/^int	numlen(unsigned long ln, t_conv *cvut)$/;"	f	typeref:typename:int
numlenneg	libft/ft_printf/optionctrl.c	/^int	numlenneg(long long ln, t_conv *cvut)$/;"	f	typeref:typename:int
parselong	libft/ft_main/ft_itoa.c	/^int	parselong(long ln, int *neg)$/;"	f	typeref:typename:int
path	minishell.h	/^	char	**path;$/;"	m	struct:s_pipex	typeref:typename:char **
pid	minishell.h	/^	int		*pid;$/;"	m	struct:s_pipex	typeref:typename:int *
placeva	libft/ft_printf/printfer.c	/^int	placeva(int *ret, t_conv *cvut, int i, va_list perc)$/;"	f	typeref:typename:int
plus	libft/ft_printf/printf.h	/^	int	plus;$/;"	m	struct:sctone	typeref:typename:int
point	libft/ft_printf/printf.h	/^	int	point;$/;"	m	struct:sctone	typeref:typename:int
ppx	minishell.h	/^	t_pipex		ppx;$/;"	m	struct:s_minish	typeref:typename:t_pipex
pre_fork_builtin	src/mini_prefork_builtin.c	/^int	pre_fork_builtin(char **cmd, t_minish *minish)$/;"	f	typeref:typename:int
precis	libft/ft_printf/printf.h	/^	int		precis;$/;"	m	struct:sct	typeref:typename:int
precision_counter	libft/ft_printf/printparser.c	/^int	precision_counter(const char *str, int i)$/;"	f	typeref:typename:int
prev_line	minishell.h	/^	char		*prev_line;$/;"	m	struct:s_minish	typeref:typename:char *
print_lst_line	src/For_testing_only.c	/^void	print_lst_line(t_minish minish)$/;"	f	typeref:typename:void
printargcha	libft/ft_printf/print_toconv_supll.c	/^int	printargcha(int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
printarghex	libft/ft_printf/print_toconv_supll.c	/^int	printarghex(unsigned int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
printargptr	libft/ft_printf/print_toconv_supll.c	/^int	printargptr(unsigned long toconv, t_conv *cvut)$/;"	f	typeref:typename:int
proxylengthcnt	libft/ft_printf/printparser_supl.c	/^int	proxylengthcnt(const char *str, int i)$/;"	f	typeref:typename:int
prx_len	libft/ft_printf/printf.h	/^	int		prx_len;$/;"	m	struct:sct	typeref:typename:int
ptrtypes	libft/ft_printf/printfer.c	/^int	ptrtypes(t_conv *cvut, void *toconv, int i)$/;"	f	typeref:typename:int
re	Makefile	/^re: fclean all$/;"	t
re	libft/Makefile	/^re: fclean all$/;"	t
re_prompt	src/mini_sig_n_attr.c	/^void	re_prompt(int useless)$/;"	f	typeref:typename:void
readforterm	libft/ft_gnl/get_next_line_utils_bonus.c	/^int	readforterm(char *buf, int toggle)$/;"	f	typeref:typename:int
redir_fill	src/mini_redir.c	/^void	redir_fill(t_minish *minish, int type, char *res, int i)$/;"	f	typeref:typename:void
redir_quotes	src/mini_redir.c	/^int	redir_quotes(int i, char *line)$/;"	f	typeref:typename:int
s_content	minishell.h	/^typedef struct s_content$/;"	s
s_gc	minishell.h	/^typedef struct s_gc$/;"	s
s_list	libft/ft_main/libft.h	/^typedef struct s_list$/;"	s
s_minish	minishell.h	/^typedef struct s_minish$/;"	s
s_pipex	minishell.h	/^typedef struct s_pipex$/;"	s
sct	libft/ft_printf/printf.h	/^typedef struct sct {$/;"	s
sct1	libft/ft_gnl/get_next_line_bonus.h	/^typedef struct sct1 {$/;"	s
sctone	libft/ft_printf/printf.h	/^typedef struct sctone {$/;"	s
search_quotes	src/mini_tokenable.c	/^int	search_quotes(t_minish *minish, int type, int i)$/;"	f	typeref:typename:int
set_act_int	src/mini_sig_n_attr.c	/^void	set_act_int(struct sigaction *act_int, int toggle)$/;"	f	typeref:typename:void
set_act_quit	src/mini_sig_n_attr.c	/^void	set_act_quit(struct sigaction *act_quit, int toggle)$/;"	f	typeref:typename:void
set_flags	libft/ft_printf/optionctrl.c	/^void	*set_flags(t_toggler *flg)$/;"	f	typeref:typename:void *
simple_cvutlen	libft/ft_printf/print_toconv.c	/^void	simple_cvutlen(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
space	libft/ft_printf/printf.h	/^	int	space;$/;"	m	struct:sctone	typeref:typename:int
spcplunopoint	libft/ft_printf/print_toconv.c	/^void	spcplunopoint(t_toggler *flg, int toconv, t_conv *cvut)$/;"	f	typeref:typename:void
stat_after_read	libft/ft_gnl/get_next_line_bonus.c	/^char	*stat_after_read(char **statline, t_strs *strings, int red, int i)$/;"	f	typeref:typename:char *
str	minishell.h	/^	char	*str;$/;"	m	struct:s_content	typeref:typename:char *
strcvutneg	libft/ft_printf/print_toconv_suplll.c	/^void	strcvutneg(t_toggler *flg, t_conv *cvut, const char *toconv)$/;"	f	typeref:typename:void
strshrinker	libft/ft_printf/print_toconv_suplll.c	/^void	strshrinker(t_toggler *flg, t_conv *cvut, const char *toconv)$/;"	f	typeref:typename:void
t_content	minishell.h	/^}	t_content;$/;"	t	typeref:struct:s_content
t_conv	libft/ft_printf/printf.h	/^}	t_conv;$/;"	t	typeref:struct:sct
t_gc	minishell.h	/^}	t_gc;$/;"	t	typeref:struct:s_gc
t_list	libft/ft_main/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_minish	minishell.h	/^}	t_minish;$/;"	t	typeref:struct:s_minish
t_pipex	minishell.h	/^}	t_pipex;$/;"	t	typeref:struct:s_pipex
t_strs	libft/ft_gnl/get_next_line_bonus.h	/^}	t_strs;$/;"	t	typeref:struct:sct1
t_toggler	libft/ft_printf/printf.h	/^}	t_toggler;	$/;"	t	typeref:struct:sctone
testperc	libft/ft_printf/printfer.c	/^int	testperc(t_conv *cvut)$/;"	f	typeref:typename:int
testprintargint	libft/ft_printf/print_toconv_supllll.c	/^int	testprintargint(int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
testprintargstr	libft/ft_printf/print_toconv_supll.c	/^int	testprintargstr(const char *toconv, t_conv *cvut)$/;"	f	typeref:typename:int
testprintarguns	libft/ft_printf/print_toconv.c	/^int	testprintarguns(unsigned int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
trans	libft/ft_main/ft_itoa.c	/^char	*trans(int i, long buf, int *neg)$/;"	f	typeref:typename:char *
treating_expand	src/mini_expand.c	/^void	treating_expand(char *quote, t_minish *minish, int *j, char *ret)$/;"	f	typeref:typename:void
treating_line	src/mini_main.c	/^void	treating_line(t_minish *minish)$/;"	f	typeref:typename:void
trimatoi	libft/ft_main/ft_atoi.c	/^int	trimatoi(const char *nptr, int *neg)$/;"	f	typeref:typename:int
type	libft/ft_printf/printf.h	/^	char	type;$/;"	m	struct:sct	typeref:typename:char
type	minishell.h	/^	int		type;$/;"	m	struct:s_content	typeref:typename:int
type_reader	libft/ft_printf/printparser.c	/^char	type_reader(const char *str, int i)$/;"	f	typeref:typename:char
wid	libft/ft_printf/printf.h	/^	int		wid;$/;"	m	struct:sct	typeref:typename:int
width_counter	libft/ft_printf/printparser.c	/^int	width_counter(const char *str, int i)$/;"	f	typeref:typename:int
yo	tester.sh	/^\/bin\/bash << yo > $TEST$/;"	h
yo	tester.sh	/^\/bin\/bash << yo$/;"	h
yo	tester.sh	/^~\/MINISHELL\/minishell << yo$/;"	h
yoy	tester.sh	/^~\/MINISHELL\/minishell << yoy$/;"	h
yoyoy	tester.sh	/^\/bin\/bash << yoyoy$/;"	h
zero	libft/ft_printf/printf.h	/^	int	zero;$/;"	m	struct:sctone	typeref:typename:int
